{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/PhonebookService.js","components/Notification.js","App.js","index.js"],"names":["Filter","_ref","search","react_default","a","createElement","placeholder","onChange","PersonForm","name","phone","addName","setNewName","setPhone","onSubmit","value","type","Persons","filteredNames","deletePhonebookEntry","map","person","key","id","number","onClick","baseUrl","PhonebookService","axios","get","then","response","data","catch","error","newEntry","post","put","concat","delete","Notification","message","messageStyle","color","msgColor","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","_useState5","_useState6","phoneno","setPhoneNo","_useState7","_useState8","searchText","setSearchText","_useState9","_useState10","setMessage","_useState11","_useState12","setMsgColor","namesToShow","filter","RegExp","useEffect","console","log","fetchAllEntries","postToServer","displayMessage","blankAllInputFields","updatePhonebookEntry","window","confirm","msg","setTimeout","components_Filter","event","target","components_PersonForm","preventDefault","find","trim","objectSpread","components_Persons","toString","finally","components_Notification","Fragment","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5eb6a90e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({search}) => {\n\n  return (\n    <div>\n      filter shown with <input placeholder=\"Type text to search...\" onChange={search}/><br/>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({name, phone, addName, setNewName, setPhone}) => {\n\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={name} onChange={setNewName}/><br/>\n        phone: <input value={phone} onChange={setPhone}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div> \n    </form>\n\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({filteredNames, deletePhonebookEntry}) => {\n\n  const names = () => filteredNames.map(\n    person => <li key={person.id}>\n                Name: {person.name} Phone#: {person.number}&nbsp;&nbsp;\n                <button value={person.id} onClick={deletePhonebookEntry}>delete</button>\n              </li>\n  )\n\n  return (\n    <ol>\n      {names()}\n    </ol>\n  )\n}\n\nexport default Persons","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst fetchPhonebookEntries = () => {\r\n  return axios.get(baseUrl)\r\n              .then(response => response.data)\r\n              .catch(error => error.response.data)\r\n}\r\n\r\nconst addEntryToPhonebook = newEntry => {\r\n  return axios.post(baseUrl, newEntry)\r\n                .then(response => response.data)\r\n                .catch(error => error.response.data)\r\n}\r\n\r\nconst updatePhonebookEntry = (newEntry) => {\r\n  return axios.put(`${baseUrl}/${newEntry.id}`, newEntry)\r\n              .then(response => response.data)\r\n              .catch(error => error.response.data)\r\n}\r\n\r\nconst deletePhonebookEntry = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n                .then(response => response.data)\r\n                .catch(error => error.response.data)\r\n}\r\n\r\nexport default { \r\n  fetchPhonebookEntries, addEntryToPhonebook, updatePhonebookEntry, deletePhonebookEntry \r\n}","import React from 'react'\r\n\r\nconst Notification = ({message, msgColor}) => {\r\n    const messageStyle = {\r\n        color: msgColor,\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n    // messageStyle.color = msgColor\r\n\r\n    return <div style={messageStyle}>{message}</div>\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport PhonebookService from './services/PhonebookService'\nimport Notification from './components/Notification'\nimport axios from 'axios'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ phoneno, setPhoneNo ] = useState('')\n  const [ searchText, setSearchText ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ msgColor, setMsgColor ] = useState(null)\n\n  const namesToShow = persons.filter(person => person.name.search(new RegExp(searchText, 'i')) >= 0)\n  \n  useEffect(() => {\n    axios\n      .get('/api/persons')\n      .then(response => {\n        console.log(response.data)\n        setPersons(response.data)\n      })\n  }, [])\n\n  const fetchAllEntries = () =>         \n    PhonebookService.fetchPhonebookEntries()\n      .then(response =>  setPersons(response))\n  \n  const addNameToPhonebook = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name.trim() === newName.trim()) \n    person == null ? \n      postToServer(newName, phoneno) : updatePhonebookEntry({...person, number: phoneno})\n  } \n\n  const postToServer = (name, number) => {\n    PhonebookService\n      .addEntryToPhonebook({name, number})\n      .then(response => {\n        fetchAllEntries()\n        !response.error ? \n          displayMessage(`Successfully added ${name} to phonebook`, 'green') : displayMessage(response.error, 'red')\n      })\n      .catch(error => displayMessage(\"Unknown error!\", \"red\"))\n    blankAllInputFields()\n  }\n\n  const updatePhonebookEntry = (person) => {\n    if (window.confirm(`${person.name} is already added to phonebook, replace old number with new one?`)) { \n      PhonebookService\n        .updatePhonebookEntry(person)\n        .then(response => {\n          fetchAllEntries()\n          displayMessage(`Successfully updated ${person.name}'s phone num to ${person.number}`, 'green')\n        })\n        .catch(error => {\n          displayMessage(`${error}`, 'red')\n        })\n      blankAllInputFields()\n    }\n  }\n\n  const deleteEntry = (event) => {\n    const person = persons.find(person => person.id.toString() === event.target.value)\n    let msg\n    if (window.confirm(`Do you want to delete ${person.name}?`)) { \n      PhonebookService\n        .deletePhonebookEntry(person.id)\n        .then(response => msg = `${person.name} successfully deleted from server!`)\n        .catch(error => msg = `${person.name} doesn't exist on server!`)\n        .finally(() => {\n          displayMessage(msg, 'red')\n          fetchAllEntries()\n        })\n    }\n  }\n\n  const displayMessage = (msg, color) => {\n    setMessage(msg)\n    setMsgColor(color)\n    setTimeout(() => setMessage(null), 2000) \n  }\n  \n  const blankAllInputFields = () => {\n    setNewName('')\n    setPhoneNo('')\n    setSearchText('')\n  }\n\n  const setName = (event) => setNewName(event.target.value)\n\n  const setPhoneNumber = (event) => setPhoneNo(event.target.value)\n\n  const showNamesWith = (event) => setSearchText(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter search={showNamesWith}/>\n      <h2>add a new</h2>\n      <PersonForm name={newName} phone={phoneno} addName={addNameToPhonebook} setNewName={setName} setPhone={setPhoneNumber} />\n      <h2>Numbers</h2>\n      <Persons filteredNames={namesToShow} deletePhonebookEntry={deleteEntry} />\n      {message ? <Notification message={message} msgColor={msgColor} /> : <></>}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'  // highlight-line\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}